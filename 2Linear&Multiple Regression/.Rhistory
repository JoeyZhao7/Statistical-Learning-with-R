library(readxl)
homes <- read_excel("C:/Users/Joey Zhao/Desktop/529/2/homes.xls")
View(homes)
data1=subset(homes,select = c(price, lotsize, area, beds, baths, year,garage))
cor(data1)
which.max(data1$price)
data1[73,]
m1=lm(price~.,data=data1)
m1
library(readxl)
homes <- read_excel("C:/Users/Joey Zhao/Desktop/529/2/homes.xls")
View(homes)
library(readxl)
homes <- read_excel("C:/Users/Joey Zhao/Desktop/529/2/homes.xls")
View(homes)
data1=subset(homes,select = c(price, lotsize, area, beds, baths, year,garage))
cor(data1)
which.max(data1$price)
data1[73,]
m1=lm(price~.,data=data1)
m1
m1=lm(price~.,data=data1)
m1
library(PASWR2)
checking.plots(m1)
pre1=predict(m1,data1)
help(predict) # also can use function residual()
res1=(data1$price-pre1)^2
which.max(res1)
data1[73,]
summary(m1)
help("confint")
confint(m1,3,0.99)
new1=data.frame(lotsize=24500,area=2650,beds=3,baths=3,year=1900,garage=2)
predict(m1,new1,interval = "conf" , level = 0.95)
m1
new1=data.frame(lotsize=24500,area=2650,beds=3,baths=3,year=1990,garage=2)
predict(m1,new1,interval = "conf" , level = 0.95)
new1=data.frame(lotsize=24500,area=2650,beds=3,baths=3,year=1990,garage=2)
predict(m1,new1,interval = "conf" , level = 0.95)
m1
new1=data.frame(lotsize=24500,area=2650,beds=3,baths=3,year=1990,garage=2)
predict(m1,new1,interval = "conf" , level = 0.95)
library(MASS) #dataframe Cars93
d0=Cars93
str(d0)
plot(MPG.highway~MPG.city,d0)
grid()
identify(d0$MPG.highway~d0$MPG.city)
help(identity)
view(Cars93)
View(Cars93)
plot(MPG.highway~MPG.city,d0,xlim=c(10,55),ylim=c(10,55))
grid()
identify(d0$MPG.highway~d0$MPG.city)
d0[c(39,41,17),]
plot(Price~MPG.city,d0,pch=19,cex=0.6,xlim=c(5,55),ylim=c(0,70),col="red",xlab="")
par(new=TRUE)        # to overlap plots
plot(Price~MPG.highway,d0,pch=19,cex=0.6,xlim=c(5,55),ylim=c(0,70),col="blue",xlab="mileage")
grid()
help(par)
plot(Price~MPG.city,d0,pch=19,cex=0.6,xlim=c(5,55),ylim=c(0,70),col="red",xlab="")
plot(Price~MPG.highway,d0,pch=19,cex=0.6,xlim=c(5,55),ylim=c(0,70),col="blue",xlab="mileage")
m1=lm(Price~MPG.city,d0)
m2=lm(Price~MPG.highway,d0)
plot(Price~MPG.city,d0,pch=19,cex=0.6,xlim=c(5,55),ylim=c(0,70),col="red",xlab="")
par(new=TRUE)        # to overlap plots
plot(Price~MPG.highway,d0,pch=19,cex=0.6,xlim=c(5,55),ylim=c(0,70),col="blue",xlab="mileage")
grid()
m1=lm(Price~MPG.city,d0)
m2=lm(Price~MPG.highway,d0)
abline(m1,lty=2,col="red")
abline(m2,lty=2,col="blue")
name2 = c("city","highway")
legend("topright",name2,lty=c(pch=10,pch=19),col=c("blue","red"))
checking.plots(m1)
library(PASWR2)
checking.plots(m1)
checking.plots(m2)
d0b=d0[,c(1,2,5,7,8,26)]
d0b[c(48,59),]
checking.plots(m1)
checking.plots(m2)
a=checking.plots(m2)
summary(a)
a$pty
a$mfrow
residuals(m1)
which.max(residuals(m1))
which.max(residuals(m1))
which.max(residuals(m1))
res1=residuals(m1)
which.max(res1)
anova(m1)
qqnorm(d0$MPG.highway~d0$MPG.city)
qqnorm(m1)
qqnorm(d1)
qqnorm(d0)
qqnorm(MPG.highway~MPG.city,d0)
qqnorm(MPG.highway,MPG.city,d0)
qqnorm(MPG.highway$d0,MPG.city$d0)
qqnorm
newval = data.frame(MPG.city = 27.5)
library(PASWR2)
d0 = GRADES
head(d0)
dim(d0)
gpa = d0$gpa
sat=d0$sat
plot(gpa~sat,d0,pch=19,cex=0.6)
grid()
m1 = lm(gpa~sat,d0)
checking.plots(m1)
coef(m1)
m1
plot(gpa~sat,d0,pch=19,cex=0.6)
abline(m1,col="red",lwd=2)
grid()
identify(d0$gpa~d0$sat,cex=0.8)
newval=data.frame(sat=1400)
predict(m1,newval)
predict(m1,newval,interval="conf",level=0.96)
confint(m1,level=0.99)
summary(m1)
Coefficients:
Estimate Std. Error t value Pr(>|t|)
sxy = cov(gpa,sat)
b1 = sxy / var(sat)            # 0.00309427
r = sxy / sd(sat) / sd(gpa)    # [1] 0.7491015
r2 = r*r
r2                             # [1] 0.5611531
library(PASWR2)   # checking.plots()
library(MASS)     # Cars93()
d0 = Cars93
d1 = Cars93[,c(7,11,12,13,14,18,25)]    # or
d1 = subset(d0,select=c(MPG.city, Cylinders, EngineSize, Horsepower, RPM, Passengers, Weight))
d1$Cylinders = as.numeric(d1$Cylinders)
cor(d1)
cor(d1[-1,-1])
m1=lm(MPG.city~.,data=d1)
checking.plots(m1)
checking.plots(m1)
d1[c(39,42,83),]
coef(m1)
(Intercept)    Cylinders   EngineSize   Horsepower          RPM   Passengers       Weight
help(regsubsets)
library(leaps)    # regsubsets()
models=regsubsets(MPG.city~.,d1,nvmax=12)
help(regsubsets)
models=regsubsets(MPG.city~.,d1,nvmax=5)
summary(models)
models=regsubsets(MPG.city~.,d1,nvmax=7)
summary(models)
help(count)
train
ceiling(n/2)   # [1] 47
set.seed(12)
train = sample(1:n,47)       # train row numbers
n = nrow(d1)    # 93
n/2             # [1] 46.5
ceiling(n/2)   # [1] 47
set.seed(12)
train = sample(1:n,47)       # train row numbers
train
count(train,7)
help(count)
count(train,7)
table(d1)
table(train)
help(ftable)
ftable(Titanic, row.vars = 1:3)
ftable(row.vars = 1:3,col.vars = 1:2)
ftable(d0,row.vars = 1:3)
ftable(d0,col.vars = 1:3)
ftable(d0)
ftable(d1)
m1 = lm(MPG.city~.,d1train)
d1train = d1[train,]
d1test  = d1[-train,]
dim(d1train)     # [1] 47  5
dim(d1test)      # [1] 46  5
m1 = lm(MPG.city~.,d1train)
yhat1 = predict(m1,d1test)
ytest1 = d1test$MPG.city
mean((yhat1-ytest1)^2)       # 9.736857
d2 = subset(d1,select=c(MPG.city, EngineSize, Horsepower, RPM, Weight))
d2train = d2[train,]
d2test  = d2[-train,]
m2 = lm(MPG.city~.,d2train)
yhat2  = predict(m2,d2test)
ytest2 = d2test$MPG.city
mean((yhat2-ytest2)^2)       # 9.389211
plot(yhat2~ytest2,pch=19,cex=0.5,ylim=c(10,50),xlim=c(10,50))
abline(0,1)
grid()
text(yhat2~ytest2,labels=rownames(d2test),cex=0.6,pos=1,offset=0.25)
help("stepAIC")
Summary(step1)
step1 = stepAIC(m1)
Summary(step1)
coef(step1)
library(MASS) # Boston
library(PASWR2) # checking.plots()
d0 = Boston
m1=lm(medv~lstat,d0)
checking.plots(m1)
m2=lm(medv~lstat+I(lstat^2),d0)
checking.plots(m2)
par(mfrow=c(2,2))
plot(m2)
checking.plots(m2)
plot(m2)
par(mfrow=c(2,2))
plot(m2)
summary(m1)
summary(m2)
m5=lm(medv~poly(lstat,5),d0)
checking.plots(m5)
summary(m5)
m7=lm(medv~poly(lstat,7),d0)
checking.plots(m7)
m8 = lm(medv~rm,d0)
checking.plots(m8)
m9 = lm(medv~log(rm),d0)
checking.plots(m9)
m9b = lm(medv~I(rm^2),d0)
checking.plots(m9b)
m9 = lm(medv~log(rm),d0)
checking.plots(m9)
m9b = lm(medv~I(rm^2),d0)
checking.plots(m9b)
m2=lm(medv~lstat+(lstat^2),d0)
checking.plots(m2)
summary(m2)
summary(m1)
m2=lm(medv~lstat+I(lstat^2),d0)
summary(m2)
help(PAR)
help(par)
checking.plots(m2)
par(mfrow=c(1,1))
plot(m2)
checking.plots(m2)
par(mfrow=c(2,2))
plot(m2)
